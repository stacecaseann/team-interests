{
  "swagger": "2.0",
  "info": {
    "title": "Interests API",
    "description": "This API allows users to see our interests endpoints and add/update/delete if authenticated.",
    "version": "1.0.0"
  },
  "host": "team-interests.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/recipes/": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Gets all recipes.",
        "description": "",
        "responses": {
          "200": {
            "description": "List of all recipes"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Creates a new recipe.",
        "description": "",
        "parameters": [
          {
            "name": "recipe",
            "in": "body",
            "description": "The recipe to create.",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Gets a recipe by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the recipe to retrieve."
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Updates a recipe by ID.",
        "description": "Updates fields in the recipe. The ingredients and instructions will need the complete list in order to be updated correctly.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the recipe to update."
          },
          {
            "name": "recipe",
            "in": "body",
            "description": "The recipe data to update.",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Deletes a recipe by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the recipe to delete."
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/recipes/name/{recipeName}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Gets all recipes to match Name.",
        "description": "",
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the recipes to retrieve."
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/movies/": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Gets all movies.",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Creates a new movie.",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "director": {
                  "example": "any"
                },
                "language": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "genre": {
                  "example": "any"
                },
                "synopsis": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Gets a movie by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Movies"
        ],
        "summary": "Updates a movie by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "director": {
                  "example": "any"
                },
                "language": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "genre": {
                  "example": "any"
                },
                "synopsis": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "summary": "Deletes a movie by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speakers/": {
      "get": {
        "tags": [
          "Speakers"
        ],
        "summary": "Gets all speakers.",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Speakers"
        ],
        "summary": "Creates a new speaker.",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "birthYear": {
                  "example": "any"
                },
                "quote": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speakers/{id}": {
      "get": {
        "tags": [
          "Speakers"
        ],
        "summary": "Gets a speaker by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Speakers"
        ],
        "summary": "Updates a speaker by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "birthYear": {
                  "example": "any"
                },
                "quote": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Speakers"
        ],
        "summary": "Deletes a speaker by ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/favoritebooks/": {
      "get": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Get all favorite books",
        "description": "",
        "responses": {
          "200": {
            "description": "List of favorite books"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Add a new favorite book",
        "description": "",
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "description": "The book to create.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "year": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/favoritebooks/{bookId}": {
      "get": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Get a favorite book by ID",
        "description": "",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the book to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "A favorite book"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Update a favorite book by ID",
        "description": "",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the book to update."
          },
          {
            "name": "book",
            "in": "body",
            "description": "The book data to update.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "year": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Delete a favorite book by ID",
        "description": "",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the book to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/favoritebooks/createWithArray": {
      "post": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Add multiple favorite books from an array",
        "description": "",
        "parameters": [
          {
            "name": "books",
            "in": "body",
            "description": "Array of books to create.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "author": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "year": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Books created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/favoritebooks/createWithList": {
      "post": {
        "tags": [
          "FavoriteBooks"
        ],
        "summary": "Add multiple favorite books from a list",
        "description": "",
        "parameters": [
          {
            "name": "books",
            "in": "body",
            "description": "List of books to create.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "author": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "year": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Books created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}